package Droid;

import BattleWeapon.*;
import java.util.*;
import utils.*;

public class DroidManager {
    private List<Droid> droids;
    private Scanner scanner;

    public DroidManager(List<Droid> droids, Scanner scanner){
        this.droids = droids;
        this.scanner = scanner;
    }

    public void createDroid(){
        Weapon[] weapons = {new Blaster(), new IonGun(), new PlasmaGranade(), new Rocket()};
        System.out.println("–û–±–µ—Ä—ñ—Ç—å –∑–±—Ä–æ—é –¥–ª—è –¥—Ä–æ—ó–¥–∞: ");

        for (int i = 0; i < weapons.length; i++) {
            System.out.printf("%d. %s (–®–∫–æ–¥–∞: %d)%n", i + 1, weapons[i].getName(), weapons[i].getDamage());
        }
        int weaponChoice = scanner.nextInt() - 1;

        if (weaponChoice >= 0 && weaponChoice < weapons.length) {
            Weapon selectedWeapon = weapons[weaponChoice];
            System.out.print("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –¥—Ä–æ—ó–¥–∞: ");
            scanner.nextLine();
            String name = scanner.nextLine();

            System.out.println("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥—Ä–æ—ó–¥–∞:");
            System.out.println("1. –ê—Ç–∞–∫–∞—é—á–∏–π");
            System.out.println("2. –•—ñ–ª–µ—Ä");
            System.out.println("3. –í–∞–∂–∫–∏–π");
            System.out.println("4. –Ü–Ω–∂–µ–Ω–µ—Ä");
            int typeChoice = scanner.nextInt();

            Droid newDroid = null;
            switch (typeChoice) {
                case 1:
                    newDroid = new AttackDroid(name, selectedWeapon);
                    break;
                case 2:
                    newDroid = new HealerDroid(name, selectedWeapon);
                    break;
                case 3:
                    newDroid = new HeavyDroid(name, selectedWeapon);
                    break;
                case 4:
                    newDroid = new EngineerDroid(name, selectedWeapon);
                    break;
                default:
                    System.out.println("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä.");
                    return;
            }
            droids.add(newDroid);
            System.out.println("–î—Ä–æ—ó–¥ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π —É—Å–ø—ñ—à–Ω–æ.");
        } else {
            System.out.println("–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä –∑–±—Ä–æ—ó.");
        }
    }

    public void showDroid(){
        if(droids.isEmpty()){
            System.out.println("–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥—Ä–æ—ó–¥—ñ–≤.");
        } else{
            System.out.println("–î–æ—Å—Ç—É–ø–Ω—ñ –¥—Ä–æ—ó–¥–∏:");
            for(Droid droid : droids){
                //Droid droid = droids.get(i);
                System.out.printf("ü¶æ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥—Ä–æ—ó–¥–∞: %s" + ConsoleColors.RESET + "%n", droid.getName());
                System.out.printf(ConsoleColors.CYAN + "‚ù§Ô∏è –ó–¥–æ—Ä–æ–≤'—è: %d/%d%n", droid.getHealth(), 100); // –ü—Ä–∏–ø—É—Å—Ç–∏–º–æ, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–µ –∑–¥–æ—Ä–æ–≤'—è 100
                System.out.printf(ConsoleColors.CYAN + "‚öîÔ∏è –®–∫–æ–¥–∞: %d%n", droid.getDamage());
                System.out.printf(ConsoleColors.CYAN + "üõ°Ô∏è –ë—Ä–æ–Ω—è: %d%n", droid.getArmor());
                //Speed
                System.out.printf(ConsoleColors.CYAN + "üéØ –¢–æ—á–Ω—ñ—Å—Ç—å: %.2f%%%n", droid.getAccuracy()); // –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —É –≤—ñ–¥—Å–æ—Ç–∫–∞—Ö
                System.out.printf(ConsoleColors.CYAN + "üîã –ï–Ω–µ—Ä–≥—ñ—è: %.2f%n" + ConsoleColors.RESET, droid.getEnergy());
                System.out.println();
            }

        }
    }
}
